{
  "version": "45.0.0",
  "artifacts": {
    "VirtualPowerPlantStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "VirtualPowerPlantStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "VirtualPowerPlantStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://404782754294/eu-central-1",
      "properties": {
        "templateFile": "VirtualPowerPlantStack.template.json",
        "terminationProtection": false,
        "tags": {
          "Project": "virtual-power-plant"
        },
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::404782754294:role/cdk-hnb659fds-deploy-role-404782754294-eu-central-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::404782754294:role/cdk-hnb659fds-cfn-exec-role-404782754294-eu-central-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-404782754294-eu-central-1/e1cebb7303841b54fb34286352b0a2bd8440bb7ebe41f007e25069819c650545.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "VirtualPowerPlantStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::404782754294:role/cdk-hnb659fds-lookup-role-404782754294-eu-central-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "VirtualPowerPlantStack.assets"
      ],
      "metadata": {
        "/VirtualPowerPlantStack": [
          {
            "type": "aws:cdk:stack-tags",
            "data": [
              {
                "Key": "Project",
                "Value": "virtual-power-plant"
              }
            ]
          }
        ],
        "/VirtualPowerPlantStack/Vpc/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "Vpc8378EB38"
          }
        ],
        "/VirtualPowerPlantStack/Vpc/PublicSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcPublicSubnet1Subnet5C2D37C4"
          }
        ],
        "/VirtualPowerPlantStack/Vpc/PublicSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcPublicSubnet1RouteTable6C95E38E"
          }
        ],
        "/VirtualPowerPlantStack/Vpc/PublicSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcPublicSubnet1RouteTableAssociation97140677"
          }
        ],
        "/VirtualPowerPlantStack/Vpc/PublicSubnet1/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcPublicSubnet1DefaultRoute3DA9E72A"
          }
        ],
        "/VirtualPowerPlantStack/Vpc/PublicSubnet1/EIP": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcPublicSubnet1EIPD7E02669"
          }
        ],
        "/VirtualPowerPlantStack/Vpc/PublicSubnet1/NATGateway": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcPublicSubnet1NATGateway4D7517AA"
          }
        ],
        "/VirtualPowerPlantStack/Vpc/PublicSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcPublicSubnet2Subnet691E08A3"
          }
        ],
        "/VirtualPowerPlantStack/Vpc/PublicSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcPublicSubnet2RouteTable94F7E489"
          }
        ],
        "/VirtualPowerPlantStack/Vpc/PublicSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcPublicSubnet2RouteTableAssociationDD5762D8"
          }
        ],
        "/VirtualPowerPlantStack/Vpc/PublicSubnet2/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcPublicSubnet2DefaultRoute97F91067"
          }
        ],
        "/VirtualPowerPlantStack/Vpc/PrivateSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcPrivateSubnet1Subnet536B997A"
          }
        ],
        "/VirtualPowerPlantStack/Vpc/PrivateSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcPrivateSubnet1RouteTableB2C5B500"
          }
        ],
        "/VirtualPowerPlantStack/Vpc/PrivateSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcPrivateSubnet1RouteTableAssociation70C59FA6"
          }
        ],
        "/VirtualPowerPlantStack/Vpc/PrivateSubnet1/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcPrivateSubnet1DefaultRouteBE02A9ED"
          }
        ],
        "/VirtualPowerPlantStack/Vpc/PrivateSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcPrivateSubnet2Subnet3788AAA1"
          }
        ],
        "/VirtualPowerPlantStack/Vpc/PrivateSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcPrivateSubnet2RouteTableA678073B"
          }
        ],
        "/VirtualPowerPlantStack/Vpc/PrivateSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcPrivateSubnet2RouteTableAssociationA89CAD56"
          }
        ],
        "/VirtualPowerPlantStack/Vpc/PrivateSubnet2/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcPrivateSubnet2DefaultRoute060D2087"
          }
        ],
        "/VirtualPowerPlantStack/Vpc/IGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcIGWD7BA715C"
          }
        ],
        "/VirtualPowerPlantStack/Vpc/VPCGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcVPCGWBF912B6E"
          }
        ],
        "/VirtualPowerPlantStack/Cluster/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterEB0386A7"
          }
        ],
        "/VirtualPowerPlantStack/ClickHouseCluster/Subnets/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClickHouseClusterSubnetsE85477E1"
          }
        ],
        "/VirtualPowerPlantStack/ClickHouseCluster/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClickHouseClusterSecurityGroup44F2FC3F"
          }
        ],
        "/VirtualPowerPlantStack/ClickHouseCluster/Secret/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClickHouseClusterSecretC2E5B153"
          }
        ],
        "/VirtualPowerPlantStack/ClickHouseCluster/Secret/Attachment/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClickHouseClusterSecretAttachment5DF046BC"
          }
        ],
        "/VirtualPowerPlantStack/ClickHouseCluster/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClickHouseCluster6C6D09C2"
          }
        ],
        "/VirtualPowerPlantStack/DbSecret/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DbSecret685A0FA5"
          }
        ],
        "/VirtualPowerPlantStack/DbSecret/Attachment/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DbSecretAttachment0609CE05"
          }
        ],
        "/VirtualPowerPlantStack/NeonInstance/SubnetGroup/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "NeonInstanceSubnetGroupB9B22BF7"
          }
        ],
        "/VirtualPowerPlantStack/NeonInstance/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "NeonInstanceSecurityGroup401C8A32"
          }
        ],
        "/VirtualPowerPlantStack/NeonInstance/SecurityGroup/from VirtualPowerPlantStackNeonProxyProxySecurityGroupD63AB983:{IndirectPort}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "NeonInstanceSecurityGroupfromVirtualPowerPlantStackNeonProxyProxySecurityGroupD63AB983IndirectPort4673495B"
          }
        ],
        "/VirtualPowerPlantStack/NeonInstance/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "NeonInstance31E13C37"
          }
        ],
        "/VirtualPowerPlantStack/NeonProxy/IAMRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "NeonProxyIAMRole88513320"
          }
        ],
        "/VirtualPowerPlantStack/NeonProxy/IAMRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "NeonProxyIAMRoleDefaultPolicy9795CFD1"
          }
        ],
        "/VirtualPowerPlantStack/NeonProxy/ProxySecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "NeonProxyProxySecurityGroup5FF30C27"
          }
        ],
        "/VirtualPowerPlantStack/NeonProxy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "NeonProxyED3F4800"
          }
        ],
        "/VirtualPowerPlantStack/NeonProxy/ProxyTargetGroup": [
          {
            "type": "aws:cdk:logicalId",
            "data": "NeonProxyProxyTargetGroupB02BA524"
          }
        ],
        "/VirtualPowerPlantStack/DataProcessor/ServiceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DataProcessorServiceRoleCF9E1CFC"
          }
        ],
        "/VirtualPowerPlantStack/DataProcessor/ServiceRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DataProcessorServiceRoleDefaultPolicy5F9C43B3"
          }
        ],
        "/VirtualPowerPlantStack/DataProcessor/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DataProcessorSecurityGroup9399B4A9"
          }
        ],
        "/VirtualPowerPlantStack/DataProcessor/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DataProcessorEEF8FB1B"
          }
        ],
        "/VirtualPowerPlantStack/PowerReadingsBus/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PowerReadingsBusE6D227EC"
          }
        ],
        "/VirtualPowerPlantStack/EventDLQ/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EventDLQ3FA25A8E"
          }
        ],
        "/VirtualPowerPlantStack/EventDLQ/Policy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EventDLQPolicyC1B2A8E4"
          }
        ],
        "/VirtualPowerPlantStack/ProcessReadingsRule/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ProcessReadingsRule0BE7D8DB"
          }
        ],
        "/VirtualPowerPlantStack/ProcessReadingsRule/AllowEventRuleVirtualPowerPlantStackDataProcessor3B643FB4": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ProcessReadingsRuleAllowEventRuleVirtualPowerPlantStackDataProcessor3B643FB4C0B9C357"
          }
        ],
        "/VirtualPowerPlantStack/ApiTask/TaskRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ApiTaskTaskRoleD15A20E9"
          }
        ],
        "/VirtualPowerPlantStack/ApiTask/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ApiTask011D0955"
          }
        ],
        "/VirtualPowerPlantStack/ApiService": [
          {
            "type": "aws:cdk:warning",
            "data": "minHealthyPercent has not been configured so the default value of 50% is used. The number of running tasks will decrease below the desired count during deployments etc. See https://github.com/aws/aws-cdk/issues/31705 [ack: @aws-cdk/aws-ecs:minHealthyPercent]",
            "trace": [
              "Annotations.addMessage (/home/zhiting/projects/virtual-power-plant-manager/node_modules/.pnpm/aws-cdk-lib@2.206.0_constructs@10.3.0/node_modules/aws-cdk-lib/core/lib/annotations.js:1:1709)",
              "Annotations.addWarningV2 (/home/zhiting/projects/virtual-power-plant-manager/node_modules/.pnpm/aws-cdk-lib@2.206.0_constructs@10.3.0/node_modules/aws-cdk-lib/core/lib/annotations.js:1:896)",
              "new BaseService (/home/zhiting/projects/virtual-power-plant-manager/node_modules/.pnpm/aws-cdk-lib@2.206.0_constructs@10.3.0/node_modules/aws-cdk-lib/aws-ecs/lib/base/base-service.js:1:8201)",
              "new FargateService2 (/home/zhiting/projects/virtual-power-plant-manager/node_modules/.pnpm/aws-cdk-lib@2.206.0_constructs@10.3.0/node_modules/aws-cdk-lib/aws-ecs/lib/fargate/fargate-service.js:1:3888)",
              "new FargateService2 (/home/zhiting/projects/virtual-power-plant-manager/node_modules/.pnpm/aws-cdk-lib@2.206.0_constructs@10.3.0/node_modules/aws-cdk-lib/core/lib/prop-injectable.js:1:488)",
              "new VppStack (/home/zhiting/projects/virtual-power-plant-manager/infra/lib/vpp-stack.ts:99:9)",
              "Object.<anonymous> (/home/zhiting/projects/virtual-power-plant-manager/infra/bin/infra.ts:15:1)",
              "Module._compile (node:internal/modules/cjs/loader:1469:14)",
              "Module.m._compile (/home/zhiting/projects/virtual-power-plant-manager/node_modules/.pnpm/ts-node@10.9.2_@swc+core@1.13.1_@types+node@20.19.9_typescript@5.4.5/node_modules/ts-node/src/index.ts:1618:23)",
              "Module._extensions..js (node:internal/modules/cjs/loader:1548:10)",
              "Object.require.extensions.<computed> [as .ts] (/home/zhiting/projects/virtual-power-plant-manager/node_modules/.pnpm/ts-node@10.9.2_@swc+core@1.13.1_@types+node@20.19.9_typescript@5.4.5/node_modules/ts-node/src/index.ts:1621:12)",
              "Module.load (node:internal/modules/cjs/loader:1288:32)",
              "Function.Module._load (node:internal/modules/cjs/loader:1104:12)",
              "Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:174:12)",
              "phase4 (/home/zhiting/projects/virtual-power-plant-manager/node_modules/.pnpm/ts-node@10.9.2_@swc+core@1.13.1_@types+node@20.19.9_typescript@5.4.5/node_modules/ts-node/src/bin.ts:649:14)",
              "bootstrap (/home/zhiting/projects/virtual-power-plant-manager/node_modules/.pnpm/ts-node@10.9.2_@swc+core@1.13.1_@types+node@20.19.9_typescript@5.4.5/node_modules/ts-node/src/bin.ts:95:10)",
              "main (/home/zhiting/projects/virtual-power-plant-manager/node_modules/.pnpm/ts-node@10.9.2_@swc+core@1.13.1_@types+node@20.19.9_typescript@5.4.5/node_modules/ts-node/src/bin.ts:55:10)",
              "Object.<anonymous> (/home/zhiting/projects/virtual-power-plant-manager/node_modules/.pnpm/ts-node@10.9.2_@swc+core@1.13.1_@types+node@20.19.9_typescript@5.4.5/node_modules/ts-node/src/bin.ts:800:3)",
              "Module._compile (node:internal/modules/cjs/loader:1469:14)",
              "Object.Module._extensions..js (node:internal/modules/cjs/loader:1548:10)",
              "Module.load (node:internal/modules/cjs/loader:1288:32)",
              "Function.Module._load (node:internal/modules/cjs/loader:1104:12)",
              "Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:174:12)",
              "node:internal/main/run_main_module:28:49"
            ]
          }
        ],
        "/VirtualPowerPlantStack/ApiService/Service": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ApiServiceC9037CF0"
          }
        ],
        "/VirtualPowerPlantStack/ApiService/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ApiServiceSecurityGroupA2426F91"
          }
        ],
        "/VirtualPowerPlantStack/AlertsTopic/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AlertsTopic3414BE91"
          }
        ],
        "/VirtualPowerPlantStack/AlertsQueue/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AlertsQueue4709902F"
          }
        ],
        "/VirtualPowerPlantStack/AlertsQueue/Policy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AlertsQueuePolicyC51ADAD1"
          }
        ],
        "/VirtualPowerPlantStack/AlertsQueue/VirtualPowerPlantStackAlertsTopic59ADC45B/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AlertsQueueVirtualPowerPlantStackAlertsTopic59ADC45B4F459D7E"
          }
        ],
        "/VirtualPowerPlantStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/VirtualPowerPlantStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/VirtualPowerPlantStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "VirtualPowerPlantStack"
    },
    "Tree": {
      "type": "cdk:tree",
      "properties": {
        "file": "tree.json"
      }
    },
    "aws-cdk-lib/feature-flag-report": {
      "type": "cdk:feature-flag-report",
      "properties": {
        "module": "aws-cdk-lib",
        "flags": {
          "@aws-cdk/core:enableStackNameDuplicates": {
            "recommendedValue": true,
            "explanation": "Allow multiple stacks with the same name"
          },
          "aws-cdk:enableDiffNoFail": {
            "recommendedValue": true,
            "explanation": "Make `cdk diff` not fail when there are differences"
          },
          "@aws-cdk/core:newStyleStackSynthesis": {
            "recommendedValue": true,
            "explanation": "Switch to new stack synthesis method which enables CI/CD"
          },
          "@aws-cdk/core:stackRelativeExports": {
            "recommendedValue": true,
            "explanation": "Name exports based on the construct paths relative to the stack, rather than the global construct path"
          },
          "@aws-cdk/aws-ecr-assets:dockerIgnoreSupport": {
            "recommendedValue": true,
            "explanation": "DockerImageAsset properly supports `.dockerignore` files by default"
          },
          "@aws-cdk/aws-secretsmanager:parseOwnedSecretName": {
            "recommendedValue": true,
            "explanation": "Fix the referencing of SecretsManager names from ARNs"
          },
          "@aws-cdk/aws-kms:defaultKeyPolicies": {
            "recommendedValue": true,
            "explanation": "Tighten default KMS key policies"
          },
          "@aws-cdk/aws-s3:grantWriteWithoutAcl": {
            "recommendedValue": true,
            "explanation": "Remove `PutObjectAcl` from Bucket.grantWrite"
          },
          "@aws-cdk/aws-ecs-patterns:removeDefaultDesiredCount": {
            "recommendedValue": true,
            "explanation": "Do not specify a default DesiredCount for ECS services"
          },
          "@aws-cdk/aws-rds:lowercaseDbIdentifier": {
            "recommendedValue": true,
            "explanation": "Force lowercasing of RDS Cluster names in CDK"
          },
          "@aws-cdk/aws-apigateway:usagePlanKeyOrderInsensitiveId": {
            "recommendedValue": true,
            "explanation": "Allow adding/removing multiple UsagePlanKeys independently"
          },
          "@aws-cdk/aws-efs:defaultEncryptionAtRest": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have elastic file systems encrypted at rest by default."
          },
          "@aws-cdk/aws-lambda:recognizeVersionProps": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the  `fn.currentVersion`."
          },
          "@aws-cdk/aws-lambda:recognizeLayerVersion": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the `fn.currentVersion`."
          },
          "@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have cloudfront distributions use the security policy TLSv1.2_2021 by default."
          },
          "@aws-cdk/core:checkSecretUsage": {
            "recommendedValue": true,
            "explanation": "Enable this flag to make it impossible to accidentally use SecretValues in unsafe locations"
          },
          "@aws-cdk/core:target-partitions": {
            "recommendedValue": [
              "aws",
              "aws-cn"
            ],
            "explanation": "What regions to include in lookup tables of environment agnostic stacks"
          },
          "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": {
            "recommendedValue": true,
            "explanation": "ECS extensions will automatically add an `awslogs` driver if no logging is specified"
          },
          "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have Launch Templates generated by the `InstanceRequireImdsv2Aspect` use unique names."
          },
          "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": {
            "recommendedValue": true,
            "explanation": "ARN format used by ECS. In the new ARN format, the cluster name is part of the resource ID."
          },
          "@aws-cdk/aws-iam:minimizePolicies": {
            "recommendedValue": true,
            "explanation": "Minimize IAM policies by combining Statements"
          },
          "@aws-cdk/core:validateSnapshotRemovalPolicy": {
            "recommendedValue": true,
            "explanation": "Error on snapshot removal policies on resources that do not support it."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": {
            "recommendedValue": true,
            "explanation": "Generate key aliases that include the stack name"
          },
          "@aws-cdk/aws-s3:createDefaultLoggingPolicy": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to create an S3 bucket policy by default in cases where an AWS service would automatically create the Policy if one does not exist."
          },
          "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": {
            "recommendedValue": true,
            "explanation": "Restrict KMS key policy for encrypted Queues a bit more"
          },
          "@aws-cdk/aws-apigateway:disableCloudWatchRole": {
            "recommendedValue": true,
            "explanation": "Make default CloudWatch Role behavior safe for multiple API Gateways in one environment"
          },
          "@aws-cdk/core:enablePartitionLiterals": {
            "recommendedValue": true,
            "explanation": "Make ARNs concrete if AWS partition is known"
          },
          "@aws-cdk/aws-events:eventsTargetQueueSameAccount": {
            "recommendedValue": true,
            "explanation": "Event Rules may only push to encrypted SQS queues in the same account"
          },
          "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": {
            "recommendedValue": true,
            "explanation": "Avoid setting the \"ECS\" deployment controller when adding a circuit breaker"
          },
          "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": {
            "recommendedValue": true,
            "explanation": "Enable this feature to by default create default policy names for imported roles that depend on the stack the role is in."
          },
          "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": {
            "recommendedValue": true,
            "explanation": "Use S3 Bucket Policy instead of ACLs for Server Access Logging"
          },
          "@aws-cdk/aws-route53-patters:useCertificate": {
            "recommendedValue": true,
            "explanation": "Use the official `Certificate` resource instead of `DnsValidatedCertificate`"
          },
          "@aws-cdk/customresources:installLatestAwsSdkDefault": {
            "recommendedValue": false,
            "explanation": "Whether to install the latest SDK by default in AwsCustomResource"
          },
          "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": {
            "recommendedValue": true,
            "explanation": "Use unique resource name for Database Proxy"
          },
          "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": {
            "recommendedValue": true,
            "explanation": "Remove CloudWatch alarms from deployment group"
          },
          "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": {
            "recommendedValue": true,
            "explanation": "Include authorizer configuration in the calculation of the API deployment logical ID."
          },
          "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": {
            "recommendedValue": true,
            "explanation": "Define user data for a launch template by default when a machine image is provided."
          },
          "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": {
            "recommendedValue": true,
            "explanation": "SecretTargetAttachments uses the ResourcePolicy of the attached Secret."
          },
          "@aws-cdk/aws-redshift:columnId": {
            "recommendedValue": true,
            "explanation": "Whether to use an ID to track Redshift column changes"
          },
          "@aws-cdk/aws-stepfunctions-tasks:enableEmrServicePolicyV2": {
            "recommendedValue": true,
            "explanation": "Enable AmazonEMRServicePolicy_v2 managed policies"
          },
          "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": {
            "recommendedValue": true,
            "explanation": "Restrict access to the VPC default security group"
          },
          "@aws-cdk/aws-apigateway:requestValidatorUniqueId": {
            "recommendedValue": true,
            "explanation": "Generate a unique id for each RequestValidator added to a method"
          },
          "@aws-cdk/aws-kms:aliasNameRef": {
            "recommendedValue": true,
            "explanation": "KMS Alias name and keyArn will have implicit reference to KMS Key"
          },
          "@aws-cdk/aws-kms:applyImportedAliasPermissionsToPrincipal": {
            "recommendedValue": true,
            "explanation": "Enable grant methods on Aliases imported by name to use kms:ResourceAliases condition"
          },
          "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": {
            "recommendedValue": true,
            "explanation": "Generate a launch template when creating an AutoScalingGroup"
          },
          "@aws-cdk/core:includePrefixInUniqueNameGeneration": {
            "recommendedValue": true,
            "explanation": "Include the stack prefix in the stack name generation process"
          },
          "@aws-cdk/aws-efs:denyAnonymousAccess": {
            "recommendedValue": true,
            "explanation": "EFS denies anonymous clients accesses"
          },
          "@aws-cdk/aws-opensearchservice:enableOpensearchMultiAzWithStandby": {
            "recommendedValue": true,
            "explanation": "Enables support for Multi-AZ with Standby deployment for opensearch domains"
          },
          "@aws-cdk/aws-lambda-nodejs:useLatestRuntimeVersion": {
            "recommendedValue": true,
            "explanation": "Enables aws-lambda-nodejs.Function to use the latest available NodeJs runtime as the default"
          },
          "@aws-cdk/aws-efs:mountTargetOrderInsensitiveLogicalId": {
            "recommendedValue": true,
            "explanation": "When enabled, mount targets will have a stable logicalId that is linked to the associated subnet."
          },
          "@aws-cdk/aws-rds:auroraClusterChangeScopeOfInstanceParameterGroupWithEachParameters": {
            "recommendedValue": true,
            "explanation": "When enabled, a scope of InstanceParameterGroup for AuroraClusterInstance with each parameters will change."
          },
          "@aws-cdk/aws-appsync:useArnForSourceApiAssociationIdentifier": {
            "recommendedValue": true,
            "explanation": "When enabled, will always use the arn for identifiers for CfnSourceApiAssociation in the GraphqlApi construct rather than id."
          },
          "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": {
            "recommendedValue": true,
            "explanation": "When enabled, creating an RDS database cluster from a snapshot will only render credentials for snapshot credentials."
          },
          "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForCodeCommitSource": {
            "recommendedValue": true,
            "explanation": "When enabled, the CodeCommit source action is using the default branch name 'main'."
          },
          "@aws-cdk/aws-cloudwatch-actions:changeLambdaPermissionLogicalIdForLambdaAction": {
            "recommendedValue": true,
            "explanation": "When enabled, the logical ID of a Lambda permission for a Lambda action includes an alarm ID."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeysDefaultValueToFalse": {
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default value for crossAccountKeys to false."
          },
          "@aws-cdk/aws-codepipeline:defaultPipelineTypeToV2": {
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default pipeline type to V2."
          },
          "@aws-cdk/aws-kms:reduceCrossAccountRegionPolicyScope": {
            "recommendedValue": true,
            "explanation": "When enabled, IAM Policy created from KMS key grant will reduce the resource scope to this key only."
          },
          "@aws-cdk/pipelines:reduceAssetRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from PipelineAssetsFileRole trust policy"
          },
          "@aws-cdk/aws-eks:nodegroupNameAttribute": {
            "recommendedValue": true,
            "explanation": "When enabled, nodegroupName attribute of the provisioned EKS NodeGroup will not have the cluster name prefix."
          },
          "@aws-cdk/aws-ec2:ebsDefaultGp3Volume": {
            "recommendedValue": true,
            "explanation": "When enabled, the default volume type of the EBS volume will be GP3"
          },
          "@aws-cdk/aws-ecs:removeDefaultDeploymentAlarm": {
            "recommendedValue": true,
            "explanation": "When enabled, remove default deployment alarm settings"
          },
          "@aws-cdk/custom-resources:logApiResponseDataPropertyTrueDefault": {
            "recommendedValue": false,
            "explanation": "When enabled, the custom resource used for `AwsCustomResource` will configure the `logApiResponseData` property as true by default"
          },
          "@aws-cdk/aws-s3:keepNotificationInImportedBucket": {
            "recommendedValue": false,
            "explanation": "When enabled, Adding notifications to a bucket in the current stack will not remove notification from imported stack."
          },
          "@aws-cdk/aws-stepfunctions-tasks:useNewS3UriParametersForBedrockInvokeModelTask": {
            "recommendedValue": true,
            "explanation": "When enabled, use new props for S3 URI field in task definition of state machine for bedrock invoke model."
          },
          "@aws-cdk/core:explicitStackTags": {
            "recommendedValue": true,
            "explanation": "When enabled, stack tags need to be assigned explicitly on a Stack."
          },
          "@aws-cdk/aws-ecs:enableImdsBlockingDeprecatedFeature": {
            "recommendedValue": false,
            "explanation": "When set to true along with canContainersAccessInstanceRole=false in ECS cluster, new updated commands will be added to UserData to block container accessing IMDS. **Applicable to Linux only. IMPORTANT: See [details.](#aws-cdkaws-ecsenableImdsBlockingDeprecatedFeature)**"
          },
          "@aws-cdk/aws-ecs:disableEcsImdsBlocking": {
            "recommendedValue": true,
            "explanation": "When set to true, CDK synth will throw exception if canContainersAccessInstanceRole is false. **IMPORTANT: See [details.](#aws-cdkaws-ecsdisableEcsImdsBlocking)**"
          },
          "@aws-cdk/aws-ecs:reduceEc2FargateCloudWatchPermissions": {
            "recommendedValue": true,
            "explanation": "When enabled, we will only grant the necessary permissions when users specify cloudwatch log group through logConfiguration"
          },
          "@aws-cdk/aws-dynamodb:resourcePolicyPerReplica": {
            "recommendedValue": true,
            "explanation": "When enabled will allow you to specify a resource policy per replica, and not copy the source table policy to all replicas"
          },
          "@aws-cdk/aws-ec2:ec2SumTImeoutEnabled": {
            "recommendedValue": true,
            "explanation": "When enabled, initOptions.timeout and resourceSignalTimeout values will be summed together."
          },
          "@aws-cdk/aws-appsync:appSyncGraphQLAPIScopeLambdaPermission": {
            "recommendedValue": true,
            "explanation": "When enabled, a Lambda authorizer Permission created when using GraphqlApi will be properly scoped with a SourceArn."
          },
          "@aws-cdk/aws-rds:setCorrectValueForDatabaseInstanceReadReplicaInstanceResourceId": {
            "recommendedValue": true,
            "explanation": "When enabled, the value of property `instanceResourceId` in construct `DatabaseInstanceReadReplica` will be set to the correct value which is `DbiResourceId` instead of currently `DbInstanceArn`"
          },
          "@aws-cdk/core:cfnIncludeRejectComplexResourceUpdateCreatePolicyIntrinsics": {
            "recommendedValue": true,
            "explanation": "When enabled, CFN templates added with `cfn-include` will error if the template contains Resource Update or Create policies with CFN Intrinsics that include non-primitive values."
          },
          "@aws-cdk/aws-lambda-nodejs:sdkV3ExcludeSmithyPackages": {
            "recommendedValue": true,
            "explanation": "When enabled, both `@aws-sdk` and `@smithy` packages will be excluded from the Lambda Node.js 18.x runtime to prevent version mismatches in bundled applications."
          },
          "@aws-cdk/aws-stepfunctions-tasks:fixRunEcsTaskPolicy": {
            "recommendedValue": true,
            "explanation": "When enabled, the resource of IAM Run Ecs policy generated by SFN EcsRunTask will reference the definition, instead of constructing ARN."
          },
          "@aws-cdk/aws-ec2:bastionHostUseAmazonLinux2023ByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the BastionHost construct will use the latest Amazon Linux 2023 AMI, instead of Amazon Linux 2."
          },
          "@aws-cdk/core:aspectStabilization": {
            "recommendedValue": true,
            "explanation": "When enabled, a stabilization loop will be run when invoking Aspects during synthesis."
          },
          "@aws-cdk/aws-route53-targets:userPoolDomainNameMethodWithoutCustomResource": {
            "recommendedValue": true,
            "explanation": "When enabled, use a new method for DNS Name of user pool domain target without creating a custom resource."
          },
          "@aws-cdk/aws-elasticloadbalancingV2:albDualstackWithoutPublicIpv4SecurityGroupRulesDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the default security group ingress rules will allow IPv6 ingress from anywhere"
          },
          "@aws-cdk/aws-iam:oidcRejectUnauthorizedConnections": {
            "recommendedValue": true,
            "explanation": "When enabled, the default behaviour of OIDC provider will reject unauthorized connections"
          },
          "@aws-cdk/core:enableAdditionalMetadataCollection": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will expand the scope of usage data collected to better inform CDK development and improve communication for security concerns and emerging issues."
          },
          "@aws-cdk/aws-lambda:createNewPoliciesWithAddToRolePolicy": {
            "recommendedValue": false,
            "explanation": "[Deprecated] When enabled, Lambda will create new inline policies with AddToRolePolicy instead of adding to the Default Policy Statement"
          },
          "@aws-cdk/aws-s3:setUniqueReplicationRoleName": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will automatically generate a unique role name that is used for s3 object replication."
          },
          "@aws-cdk/pipelines:reduceStageRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from Stage addActions trust policy"
          },
          "@aws-cdk/aws-events:requireEventBusPolicySid": {
            "recommendedValue": true,
            "explanation": "When enabled, grantPutEventsTo() will use resource policies with Statement IDs for service principals."
          },
          "@aws-cdk/core:aspectPrioritiesMutating": {
            "recommendedValue": true,
            "explanation": "When set to true, Aspects added by the construct library on your behalf will be given a priority of MUTATING."
          },
          "@aws-cdk/aws-dynamodb:retainTableReplica": {
            "recommendedValue": true,
            "explanation": "When enabled, table replica will be default to the removal policy of source table unless specified otherwise."
          },
          "@aws-cdk/cognito:logUserPoolClientSecretValue": {
            "recommendedValue": false,
            "explanation": "When disabled, the value of the user pool client secret will not be logged in the custom resource lambda function logs."
          },
          "@aws-cdk/pipelines:reduceCrossAccountActionRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "When enabled, scopes down the trust policy for the cross-account action role"
          },
          "@aws-cdk/aws-stepfunctions:useDistributedMapResultWriterV2": {
            "recommendedValue": true,
            "explanation": "When enabled, the resultWriterV2 property of DistributedMap will be used insted of resultWriter"
          },
          "@aws-cdk/s3-notifications:addS3TrustKeyPolicyForSnsSubscriptions": {
            "recommendedValue": true,
            "explanation": "Add an S3 trust policy to a KMS key resource policy for SNS subscriptions."
          },
          "@aws-cdk/aws-ec2:requirePrivateSubnetsForEgressOnlyInternetGateway": {
            "recommendedValue": true,
            "explanation": "When enabled, the EgressOnlyGateway resource is only created if private subnets are defined in the dual-stack VPC."
          },
          "@aws-cdk/aws-ec2-alpha:useResourceIdForVpcV2Migration": {
            "recommendedValue": false,
            "explanation": "When enabled, use resource IDs for VPC V2 migration"
          },
          "@aws-cdk/aws-s3:publicAccessBlockedByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, setting any combination of options for BlockPublicAccess will automatically set true for any options not defined."
          },
          "@aws-cdk/aws-lambda:useCdkManagedLogGroup": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK creates and manages loggroup for the lambda function"
          }
        }
      }
    }
  },
  "minimumCliVersion": "2.1020.2"
}